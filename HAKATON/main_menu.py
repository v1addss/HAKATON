import sys
import subprocess
from PyQt6.QtWidgets import (
    QApplication, QWidget, QPushButton, QVBoxLayout, QLabel, QCheckBox,
    QMessageBox, QComboBox, QDialog, QLineEdit, QHBoxLayout, QRadioButton, QButtonGroup
)
from PyQt6.QtGui import QFont, QColor
from PyQt6.QtCore import Qt


class SettingsDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–ü–∞—Ä–∞–º–µ—Ç—Ä–∏")
        self.setGeometry(300, 300, 350, 250)

        self.layout = QVBoxLayout()

        
        self.theme_label = QLabel("–¢–µ–º–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
        self.theme_combo = QComboBox()
        self.theme_combo.addItems(["–°–≤—ñ—Ç–ª–∞", "–°—ñ—Ä–∞", "–¢–µ–º–Ω–∞"])
        self.theme_combo.currentTextChanged.connect(self.change_theme)
        self.layout.addWidget(self.theme_label)
        self.layout.addWidget(self.theme_combo)

        
        self.brightness_label = QLabel("–Ø—Å–∫—Ä–∞–≤—ñ—Å—Ç—å –µ–∫—Ä–∞–Ω—É (0-100):")
        self.brightness_input = QLineEdit()
        self.brightness_input.setPlaceholderText("–ù–∞–ø—Ä–∏–∫–ª–∞–¥, 75")
        self.layout.addWidget(self.brightness_label)
        self.layout.addWidget(self.brightness_input)

        
        self.control_label = QLabel("–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è:")
        self.wasd_radio = QRadioButton("–ö–ª–∞–≤—ñ—à–∏ W, A, S, D")
        self.arrows_radio = QRadioButton("–°—Ç—Ä—ñ–ª–æ—á–∫–∏ ‚Üê ‚Üë ‚Üì ‚Üí")
        self.wasd_radio.setChecked(True)
        self.control_group = QButtonGroup()
        self.control_group.addButton(self.wasd_radio)
        self.control_group.addButton(self.arrows_radio)

        self.layout.addWidget(self.control_label)
        self.layout.addWidget(self.wasd_radio)
        self.layout.addWidget(self.arrows_radio)

        
        self.save_button = QPushButton("–ó–±–µ—Ä–µ–≥—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏")
        self.save_button.clicked.connect(self.save_settings)
        self.layout.addWidget(self.save_button)

        self.setLayout(self.layout)

        
        self.themes = {
            "–°–≤—ñ—Ç–ª–∞": "background-color: white; color: black;",
            "–°—ñ—Ä–∞": "background-color: #aaaaaa; color: black;",
            "–¢–µ–µ–º–Ω–∞": "background-color: black; color: white;"
        }

    def change_theme(self, theme_name):
        if theme_name in self.themes:
            self.setStyleSheet(self.themes[theme_name])

    def save_settings(self):
        theme = self.theme_combo.currentText()
        brightness = self.brightness_input.text()
        control = "WASD" if self.wasd_radio.isChecked() else "Arrows"

        
        try:
            brightness_value = int(brightness)
            if not (0 <= brightness_value <= 100):
                raise ValueError
        except ValueError:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —è—Å–∫—Ä–∞–≤–æ—Å—Ç—ñ –≤—ñ–¥ 0 –¥–æ 100.")
            return

        
        QMessageBox.information(
            self, "–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ",
            f"üé® –¢–µ–º–∞: {theme}\nüí° –Ø—Å–∫—Ä–∞–≤—ñ—Å—Ç—å: {brightness}%\nüéÆ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è: {control}"
        )
        self.accept()


class WarningWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è")
        self.setGeometry(200, 200, 400, 250)

        
        self.sound_enabled = True

        
        layout = QVBoxLayout()
        
        self.label = QLabel("‚ö†Ô∏è –ì—Ä–∞ –º—ñ—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–º–µ—Ä–∏ —Ç–∞ –≥—É—á–Ω—ñ –∑–≤—É–∫–∏!")
        self.label.setFont(QFont("Arial", 12))
        layout.addWidget(self.label)

        
        self.sound_checkbox = QCheckBox("–í—ñ–¥–∫–ª—é—á–∏—Ç–∏ –∑–≤—É–∫")
        self.sound_checkbox.stateChanged.connect(self.toggle_sound)
        layout.addWidget(self.sound_checkbox)

        
        self.play_button = QPushButton("–°—Ç–∞—Ä—Ç")
        self.play_button.clicked.connect(self.start_game)
        layout.addWidget(self.play_button)

        
        self.settings_button = QPushButton("–ü–∞—Ä–∞–º–µ—Ç—Ä–∏")
        self.settings_button.clicked.connect(self.open_settings)
        layout.addWidget(self.settings_button)

        
        self.exit_button = QPushButton("–í–∏–π—Ç–∏")
        self.exit_button.clicked.connect(self.close)
        layout.addWidget(self.exit_button)

        self.setLayout(layout)

    def toggle_sound(self, state):
        self.sound_enabled = not bool(state)
        print("–ó–≤—É–∫ –≤–∏–º–∫–Ω–µ–Ω" if not self.sound_enabled else "–ó–≤—É–∫ —É–≤—ñ–º–∫–Ω–µ–Ω–æ")

    def start_game(self):
        subprocess.Popen(["python", "game.py"])
        self.close()


    def open_settings(self):
        settings_dialog = SettingsDialog(self)
        settings_dialog.exec()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = WarningWindow()
    window.show()
    sys.exit(app.exec())
